name: King of Tokyo

on:
  push:
    branches: [ '**' ]
  #pull_request:
    #branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0.x' ]
    steps:
      - uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      - name: Restore tools
        run: dotnet tool restore --tool-manifest .config/dotnet-tools.json
      - name: Build
        run: dotnet build
      - name: Check format issues
        run: dotnet format --verify-no-changes -v d
      - name: Run tests
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool install --global dotnet-coverage
          dotnet sonarscanner begin /k:"king-of-tokyo-webapi-jalakey" /o:"jala-devops-key" /d:sonar.login="dc50955257c767e63a14e2eed8f72d27ba549fd8" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.qualitygate.wait=true
          dotnet build --no-incremental KOF.sln
          dotnet-coverage collect 'dotnet test' -f xml  -o 'coverage.xml'
          dotnet sonarscanner end /d:sonar.login="dc50955257c767e63a14e2eed8f72d27ba549fd8"
      #- uses: actions/checkout@v2
      # Build docker-compose image
      #- name: Build docker-compose image
      #  run: docker-compose build web
      ## Log in to Docker Hub
      #- name: Login to Docker Hub
      #  env: 
      #    DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
      #    DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      #  run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      ## Tag the Docker image
      #- name: Tag the Docker image
      #  run: docker tag king-of-tokyo-webapi-team2_web:latest ${{secrets.DOCKER_USERNAME}}/kot-image:$GITHUB_RUN_ID
      ## Push the Docker image to Docker Hub
      #- name: Push the Docker image
      #  run: docker push ${{secrets.DOCKER_USERNAME}}/kot-image:$GITHUB_RUN_ID